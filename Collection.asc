// new module script

Collection Inventory[9];
Collection Market[9];
Collection Deposit[9];

String KryptoNames[9];

MarketPrice AverageMarketPrices[6];

float max(float a,  float b)
{
  if (a > b) {
    return a;
  }
  else {
    return b;
  }
}

float min(float a,  float b)
{
  if (a > b) {
    return b;
  }
  else {
    return a;
  }
}

function UpdateMarketPrice(float Modifier)
{
  for (int iName = 0; iName < 9; iName++)
  {
    Market[iName].price = max(0.1, Modifier + AverageMarketPrices[ActiveServer].Prices[iName] * (1.0 + normrnd_unitary()));
    Market[iName].UpdateMarketGUI(iName);
  }
}

function UpdateATM() {
  LabelCashATM.Text  = String.Format("%.2f", Cash);
  LabelDebtATM.Text  = String.Format("%.2f", ATMDebt);
  LabelDepositATM.Text  = String.Format("%.2f", ATMDeposit);
}

export Inventory;
export Market;
export Deposit;
export KryptoNames;
export AverageMarketPrices;